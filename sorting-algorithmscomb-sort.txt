function combSort(arr) {
  let is_array_sorted = (arr) => {
    let sorted = true;
    for (let i = 0; i < arr.length - 1; i++) {
      if (arr[i] > arr[i + 1]) {
        sorted = false;
        break;
    } }
    return sorted;
  };
  let iteration_count = 0, gap = arr.length - 2, 
      decrease_factor = 1.25;
  /*Until array is not sorted, repeat iterations*/
  while (!is_array_sorted(arr)) { /*If not first gap*/
    if (iteration_count > 0) {/*Calculate gap*/
      gap = (gap == 1) ? gap : Math.floor(gap / decrease_factor); 
    } /*Set front and back elements and increment to a gap*/
    let front = 0, back = gap;
    while (back <= arr.length - 1) { 
      /*If elements are not ordered, swap them*/
      if (arr[front] > arr[back]) {
        [arr[front], arr[back]] = [arr[back], arr[front]];
      } /*Increment and re-run swapping*/
      front += 1;
      back += 1;
    } iteration_count += 1; } return arr; }