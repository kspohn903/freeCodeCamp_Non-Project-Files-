let zeckendorf = (n) => {
  /* Validate input */
  if(typeof n != "number") { return ; }
  if (n <= 0 && typeof n == "number") { return n.toString(); }
  /* Find nearest Fibonacci */
  let f1 = 1, f2 = 2;
  while (f2 < n) {
    [f1, f2] = [f2, f1 + f2];
  }
  /* Build Fibonacci representation */
  let digits = "";
  let remainder = n;
  while (f1 >= 1) {
    digits += (f2 <= remainder) ? "1": "0";
    remainder -= (f2 <= remainder) ? f2: 0;
    [f1,f2] = [f2-f1, f1];
  } 
  return digits[0] === "1" ? digits : digits.slice(1);
};

for(let i = 0; i < 21; i++) {
  console.log(`Zeck Case n = ${i}: ${zeckendorf(i)}`);
}