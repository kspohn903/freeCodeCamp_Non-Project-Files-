function LinkedList() {
  let length = 0;
  let head = null;
  
  let Node = function(element){
    this.element = element;
    this.next = null;
  };
  
  this.size = () => length;
  this.head = () => head;

  this.add = function(element){
    let node = new Node(element);
    if(head == null){
       head = node;
    } else {
       let current = head;
       while(current.next) { 
           current  = current.next; 
       }
       current.next = node;
    }
    length++;
  };
  
  this.remove = (element) => {
    if (head.element == element) {
      head = head.next;
      return length--;
    }
    let previous = head;
    while (previous) {
      let current = previous.next;
      if (current) { 
      /* Makes sure we are not at end where current.next would be null */
         if (current.element == element) {
             previous.next = current.next;
             return length--;
         } 
      } 
      previous = current; 
    } 
  }; /* Only change code above this line */
}