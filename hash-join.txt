let hashJoin = (tA,tB, strJoin= 'name=character') => {
        let [jA,jB] = strJoin.split('='),
           M = tB.reduce((a,x) => {
          let id = x[jB];
          return (a[id] ? a[id].push(x) : 
          a[id] = [x], a); }, {});
      return tA.reduce((a,x) => {
            let match = M[x[jA]];
            return match ? ( 
            a.concat(match.map(row => 
            dictConcat(x,row) )) ) : a; }, []);
    }, /*dictConcat :: Dict -> Dict -> Dict*/
    dictConcat = (dA,dB) => {
        let ok = Object.keys;
        return ok(dB).reduce(
        (a,k) => (a['B_' + k] = dB[k]) && a,
        ok(dA).reduce((a,k) => (
          a['A_' + k] = dA[k]) && a, {} ) );
    };
let lA = [ { age: 27, name: 'Jonah' },
             { age: 18, name: 'Alan' },
             { age: 28, name: 'Glory' },
             { age: 18, name: 'Popeye' },
             { age: 28, name: 'Alan' } ],
    lB = [
    {character: 'Jonah', nemesis: 'Whales' },
    {character: 'Jonah', nemesis: 'Spiders' },
    {character: 'Alan', nemesis: 'Ghosts' },
    {character:'Alan', nemesis: 'Zombies' },
    {character: 'Glory', nemesis: 'Buffy' },
    {character: 'Bob', nemesis: 'foo' } ];

console.log(`hashJoin: ${hashJoin(lA,lB)}`);